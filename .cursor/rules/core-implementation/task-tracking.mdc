---
name: task-tracking.mdc
description: Quy tắc thích ứng cho việc theo dõi trạng thái của task
globs: memory-bank/tasks.md
---

# Adaptive Task Status Tracking Protocol

## Nguyên Tắc Cốt Lõi

- `tasks.md` là SINGLE SOURCE OF TRUTH duy nhất cho việc theo dõi trạng thái task
- Tất cả task tracking đều phải xảy ra trong file này
- Không được tạo hoặc theo dõi tasks ở bất kỳ nơi nào khác
- Task phải được cập nhật kịp thời dựa trên mức độ phức tạp

## Cấu Trúc File `tasks.md`

```md
# Tasks

## In Progress

- [ ] Task 1: [Brief description]
  - [x] Subtask 1.1
  - [ ] Subtask 1.2
  - [ ] Subtask 1.3
  
## Pending

- [ ] Task 2: [Brief description with blocker information]
  - Blocker: [Description of the blocker]

## Planned

- [ ] Task 3: [Brief description]
- [ ] Task 4: [Brief description]

## Completed

- [x] Task 5: [Brief description]
  - [x] Subtask 5.1
  - [x] Subtask 5.2
  - Completed on: YYYY-MM-DD
```

## Task Status Conventions

- `[ ]` - Task chưa hoàn thành
- `[x]` - Task đã hoàn thành
- `[~]` - Task đang trong tiến trình
- `[!]` - Task bị blocked
- `[?]` - Task cần thêm thông tin

## Task Creation

Mỗi task phải bao gồm:

1. Trạng thái (`[ ]`, `[x]`, v.v.)
2. Tiêu đề ngắn gọn nhưng mô tả rõ ràng
3. (Tuỳ chọn) Description chi tiết hơn
4. (Tuỳ chọn) Subtasks khi cần thiết
5. (Tuỳ chọn) Metadata bổ sung như priority, deadline, assignee

## Tần Suất Cập Nhật Task

Tần suất cập nhật phụ thuộc vào mức độ phức tạp của task:

- **Level 1**: 2-3 cập nhật (start/fix/end)
- **Level 2**: 4-6 cập nhật tại các milestone chính
- **Level 3**: 8-12 cập nhật tại các defined points
- **Level 4**: 15+ cập nhật với formal verification

## Quy Tắc Task Update

1. Mỗi cập nhật phải có timestamp trong format `[YYYY-MM-DD HH:MM]`
2. Cập nhật phải rõ ràng và mô tả tiến độ hoặc thay đổi
3. Khi subtask hoàn thành, đánh dấu nó với `[x]`
4. Khi tất cả subtasks hoàn thành, đánh dấu parent task với `[x]`
5. Khi có blocker, đánh dấu task với `[!]` và ghi chú blocker
6. Task không được xóa, chỉ được di chuyển giữa các sections

## Task Movement Rules

1. Khi một task bắt đầu, di chuyển nó từ `Planned` sang `In Progress`
2. Khi một task bị blocked, di chuyển nó từ `In Progress` sang `Pending` và ghi rõ blocker
3. Khi một task hoàn thành, di chuyển nó từ `In Progress` sang `Completed`
4. Khi blocker được resolved, di chuyển task từ `Pending` sang `In Progress`
5. Không xóa các completed tasks, giữ chúng trong phần `Completed`

## Task Archiving

1. `Completed` section của `tasks.md` nên chỉ chứa các task hoàn thành gần đây
2. Định kỳ (hàng tuần/hàng tháng), archived completed tasks vào `docs/archive/completed_tasks.md`
3. Archive entry phải bao gồm completion date và brief summary
4. Archiving phải bảo tồn toàn bộ task structure bao gồm subtasks

## Task Dependency Tracking

1. Document dependencies giữa các tasks bằng reference:
   - `Depends on: #TaskID` hoặc `Depends on: Task Name`
2. Khi dependency được hoàn thành, update reference:
   - `Depends on: #TaskID (Completed)`
3. Không bắt đầu task khi dependency chưa hoàn thành
4. Trong tasks phức tạp (Level 3-4), tạo dependency graph

## Task Detail Level Based on Complexity

### Level 1: Quick Bug Fix
```md
- [ ] Fix header alignment on homepage
  - [YYYY-MM-DD HH:MM] Started investigation
  - [YYYY-MM-DD HH:MM] Fixed CSS issue in header component
  - [YYYY-MM-DD HH:MM] Verified fix works across browsers
```

### Level 2: Simple Enhancement
```md
- [ ] Add filter dropdown to product list
  - [ ] Create filter component
  - [ ] Implement filter logic
  - [ ] Connect to API
  - [ ] Add unit tests
  - [ ] Style according to design
  - [YYYY-MM-DD HH:MM] Started implementation
  - [YYYY-MM-DD HH:MM] Created basic filter component
```

### Level 3: Intermediate Feature
```md
- [ ] Implement user authentication system
  - [ ] Design authentication flow
    - [ ] Login flow
    - [ ] Registration flow
    - [ ] Password reset flow
  - [ ] Create backend API endpoints
    - [ ] Login endpoint
    - [ ] Register endpoint
    - [ ] Reset password endpoint
  - [ ] Implement frontend components
  - [ ] Add security measures
  - [ ] Write comprehensive tests
  - [YYYY-MM-DD HH:MM] Completed design of authentication flow
  - [YYYY-MM-DD HH:MM] Started API implementation
```

### Level 4: Complex System
```md
- [ ] Implement real-time collaboration system
  - [ ] Architecture design
    - [ ] Communication protocol design
    - [ ] Data synchronization strategy
    - [ ] Conflict resolution approach
  - [ ] Backend implementation
    - [ ] WebSocket server setup
    - [ ] Data persistence layer
    - [ ] Authentication integration
  - [ ] Frontend implementation
    - [ ] Real-time state management
    - [ ] UI components for collaboration
    - [ ] Offline support
  - [ ] Performance optimization
  - [ ] Comprehensive testing
  - [ ] Documentation
  - [YYYY-MM-DD HH:MM] Completed initial architecture design
  - [YYYY-MM-DD HH:MM] Created WebSocket server prototype
```

## Verification Requirements

Trước khi đánh dấu task hoàn thành, cần phải thực hiện verification checklist phù hợp với task complexity level, được defined trong verification-checklist.mdc 